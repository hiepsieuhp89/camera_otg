plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withInputStream { keystoreProperties.load(it) }
}

android {
    namespace "com.lavie.app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.lavie.app"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders += [auth0Domain: "smartbuddy.jp.auth0.com", auth0Scheme: "kyoryoapp"]
    }
    signingConfigs {
        release {
            def keyAliasVal = System.getenv("ALIAS")
            def keyPasswordVal = System.getenv("ANDROID_KEY_PASSWORD")
            def storePasswordVal = System.getenv("ANDROID_STORE_PASSWORD")

            keyAlias keyAliasVal ? keyAliasVal : keystoreProperties["keyAlias"]
            keyPassword keyPasswordVal ? keyPasswordVal : keystoreProperties["keyPassword"]
            storeFile file("../key.jks")
            storePassword storePasswordVal ? storePasswordVal : keystoreProperties["storePassword"]
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    packagingOptions {
        pickFirst 'lib/*/libUVCCamera.so'
        pickFirst 'lib/*/libjpeg-turbo1500.so'
        pickFirst 'lib/*/libuvc.so'
        pickFirst 'lib/*/libusb100.so'
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'
    
    // Add this at the top of your dependencies section
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    
    // Các thành phần Android cơ bản cho USB camera
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}
