plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withInputStream { keystoreProperties.load(it) }
}

android {
    namespace "com.delqui.kyoryo"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.delqui.kyoryo"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        minSdkVersion 21
        manifestPlaceholders += [auth0Domain: "smartbuddy.jp.auth0.com", auth0Scheme: "kyoryoapp"]
    }
    signingConfigs {
       release {
            def keyAliasVal = System.getenv("ALIAS")
            def keyPasswordVal = System.getenv("ANDROID_KEY_PASSWORD")
            def storePasswordVal = System.getenv("ANDROID_STORE_PASSWORD")

            keyAlias keyAliasVal ? keyAliasVal : keystoreProperties["keyAlias"]
            keyPassword keyPasswordVal ? keyPasswordVal : keystoreProperties["keyPassword"]
            storeFile(file("../key.jks").exists() ? file("../key.jks") : file(keystoreProperties["storeFile"]))
            storePassword storePasswordVal ? storePasswordVal : keystoreProperties["storePassword"]
       }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }

        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
